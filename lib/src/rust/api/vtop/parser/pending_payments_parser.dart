// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import '../types/pending_payment_receipt.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:meta/meta.dart' as meta;

/// Parses pending payment details from an HTML string.
///
/// Extracts rows from a specific table in the HTML and returns a vector of `PendingPayment` structs,
/// each populated with serial number, fee preference number, fee heads, end date, amount, fine,
/// total amount, and a fixed payment status of "Unpaid".
///
/// # Examples
///
/// ```
/// let html = r#"
/// <table class="table table-bordered table-responsive table-hover">
///   <tr>
///     <th>S.No</th><th>FPrefNo</th><th>Fees Heads</th><th>End Date</th>
///     <th>Amount</th><th>Fine</th><th>Total Amount</th><th>Status</th>
///   </tr>
///   <tr>
///     <td>1</td><td>12345</td><td>Tuition</td><td>2024-06-30</td>
///     <td>10000</td><td>0</td><td>10000</td><td>Unpaid</td>
///   </tr>
/// </table>
/// "#;
/// let payments = parse_pending_payments(html.to_string());
/// assert_eq!(payments.len(), 1);
/// assert_eq!(payments[0].payment_status, "Unpaid");
/// ```
Future<List<PendingPaymentReceipt>> parsePendingPayments(
        {required String html}) =>
    RustLib.instance.api
        .crateApiVtopParserPendingPaymentsParserParsePendingPayments(
            html: html);
